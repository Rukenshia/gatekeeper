<h2>Edit Team</h2>

<h2>Team</h2>
<%= render "form.html", Map.put(assigns, :action, team_path(@conn, :update, @team)) %>

<h3>Members</h3>

<div id="app">
    <%= if length(@team.members) == 0 do %>
        No team members.
    <% else %>
    <div class="mdc-layout-grid">
        <div class="mdc-layout-grid__inner">
            <div class="mdc-layout-grid__cell" v-for="member in members">
                <div class="mdc-card">
                    <div class="mdc-card__media gk-card__media--text-based gk-card__media--text-title">
                        <div class="mdc-card__media-content">{{member.name}}</div>
                    </div>
                    <div class="mdc-card__actions">
                        <div class="mdc-card__action-buttons">
                            <button @click="removeMember(member.id)" type="submit" class="mdc-button mdc-card__action mdc-card__action--button">Remove</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <% end %>

    <h4>Add new member</h4>
    <div class="mdc-layout-grid">
        <div class="mdc-layout-grid__inner">
            <%= for user <- Enum.filter(@users, fn x -> !Gatekeeper.Users.User.is_member_of(x, @team) end) do %>
            <div class="mdc-layout-grid__cell">
                <div class="mdc-card">
                    <div class="mdc-card__media gk-card__media--text-based gk-card__media--text-title">
                        <div class="mdc-card__media-content"><%= user.name %> </div>
                    </div>
                    <%= form_for @conn, team_team_path(@conn, :add_member, @team), fn f -> %>
                    <input type="hidden" name="user" value="<%= user.id %>" />
                    <div class="mdc-card__actions">
                        <div class="mdc-card__action-buttons">
                            <button type="submit" class="mdc-button mdc-card__action mdc-card__action--button">Add</button>
                        </div>
                    </div>
                    <% end %>
                </div>
            </div>
            <% end %>
        </div>
    </div>
</div>


<%= link "Back", to: team_path(@conn, :index), class: "mdc-button gk-button mdc-button--unelevated" %>

<script defer>
var app = new Vue({
    el: '#app',
    data: <%= {:safe, @vue_data} %>,
    methods: {
        removeMember(userId) {
            axios.delete(`/api/teams/${this.id}/members/${userId}`)
                .then(() => window.location.reload());
        },
    },
})
</script>